name: Validate Pull Request

on:
  pull_request:
    branches:
      - dev
    paths:
      - '**.bicep'
      - '**.json'
      - '.github/workflows/**'

jobs:
  validate_bicep:
    name: Validate Bicep Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate Bicep Template
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ secrets.AZURE_REGION }}
          template: ./main.bicep
          deploymentMode: Validate
          parameters: '@parameters/development.json'

  lint_bicep:
    name: Lint Bicep Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Bicep
        run: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep

      - name: Lint Bicep Files
        run: |
          for file in $(find . -name "*.bicep"); do
            echo "Linting $file..."
            bicep build --stdout $file > /dev/null
          done

  check_naming_convention:
    name: Check Naming Conventions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check Resource Naming
        run: |
          # Add grep patterns for your naming conventions
          echo "Checking resource naming conventions..."
          for file in $(find . -name "*.bicep"); do
            echo "Checking $file..."
            # Example: Check if resource names use proper prefixes
            if grep -P "name: '[^']*(rg-|asp-|app-)" $file; then
              echo "✅ Resource naming looks good in $file"
            else
              echo "❌ Resource naming convention violation in $file"
              exit 1
            fi
          done

  what_if_analysis:
    name: What-If Analysis
    runs-on: ubuntu-latest
    needs: [validate_bicep, lint_bicep, check_naming_convention]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run What-If Analysis
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ secrets.AZURE_REGION }}
          template: ./main.bicep
          parameters: '@parameters/development.json'
          whatIfTemplateFile: ./main.bicep
          failOnStdErr: false

  comment_pr:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: [what_if_analysis]
    if: always()
    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const workflow_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const comment = `## Validation Results
            ✨ Infrastructure validation completed!
            
            - Bicep validation: ${context.payload.workflow_run.conclusion}
            - Linting: ${context.payload.workflow_run.conclusion}
            - Naming conventions: ${context.payload.workflow_run.conclusion}
            - What-if analysis: ${context.payload.workflow_run.conclusion}
            
            [View detailed results](${workflow_url})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 